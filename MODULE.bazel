module(
    name = "rules_kotlin",
    version = "1.8.1",
    compatibility_level = 1,
    repo_name = "rules_kotlin",
)

bazel_dep(name = "protobuf", version = "29.0", repo_name = "com_google_protobuf")
bazel_dep(name = "rules_proto", version = "6.0.2", repo_name = "rules_proto")
bazel_dep(name = "abseil-py", version = "2.1.0", repo_name = "py_absl")
bazel_dep(name = "rules_cc", version = "0.0.16")
bazel_dep(name = "platforms", version = "0.0.11")
bazel_dep(name = "bazel_skylib", version = "1.7.1")
bazel_dep(name = "rules_java", version = "8.9.0")
bazel_dep(name = "rules_python", version = "0.23.1")
bazel_dep(name = "rules_android", version = "0.6.4")
bazel_dep(name = "bazel_features", version = "1.25.0")

rules_java_toolchains = use_extension("@rules_java//java:extensions.bzl", "toolchains")
use_repo(rules_java_toolchains, "remote_java_tools")

rules_kotlin_extensions = use_extension("//src/main/starlark/core/repositories:bzlmod_setup.bzl", "rules_kotlin_extensions")
use_repo(
    rules_kotlin_extensions,
    "com_github_google_ksp",
    "com_github_jetbrains_kotlin",
    "com_github_jetbrains_kotlin_git",
    "com_github_pinterest_ktlint",
    "kotlinx_serialization_core_jvm",
    "kotlinx_serialization_json",
    "kotlinx_serialization_json_jvm",
)

register_toolchains("//src/main/starlark/core/compile/cli")

register_toolchains("//kotlin/internal:default_toolchain")

# Development dependencies
# TODO(bencodes) A bunch of these dependencies need to be marked as dev_dependencies but before we can do that
# we need to sort out a few cases around how these rules are consumed in various ways.

bazel_dep(name = "rules_jvm_external", version = "6.6")
bazel_dep(name = "bazel_ci_rules", version = "1.0.0")

rbe_preconfig = use_repo_rule("@bazel_ci_rules//:rbe_repo.bzl", "rbe_preconfig")

rbe_preconfig(
    name = "buildkite_config",
    toolchain = "ubuntu2204",
)

maven = use_extension("@rules_jvm_external//:extensions.bzl", "maven")
maven.install(
    name = "kotlin_rules_maven",
    artifacts = [
        "com.google.code.findbugs:jsr305:3.0.2",
        "junit:junit:4.13-beta-3",
        "com.google.protobuf:protobuf-java:4.29.0",
        "com.google.protobuf:protobuf-java-util:4.29.0",
        "com.google.guava:guava:27.1-jre",
        "com.google.truth:truth:0.45",
        "com.google.auto.service:auto-service:1.1.1",
        "com.google.auto.service:auto-service-annotations:1.1.1",
        "com.google.auto.value:auto-value:1.10.1",
        "com.google.auto.value:auto-value-annotations:1.10.1",
        "com.google.dagger:dagger:2.53.1",
        "com.google.dagger:dagger-compiler:2.53.1",
        "com.google.dagger:dagger-producers:2.53.1",
        "javax.annotation:javax.annotation-api:1.3.2",
        "javax.inject:javax.inject:1",
        "org.apache.commons:commons-compress:1.26.2",
        "org.pantsbuild:jarjar:1.7.2",
        "dev.zacsweers.autoservice:auto-service-ksp:jar:1.2.0",
        "com.squareup.moshi:moshi:1.15.1",
        "com.squareup.moshi:moshi-kotlin:1.15.1",
        "com.squareup.moshi:moshi-kotlin-codegen:1.15.1",
    ],
    fail_if_repin_required = True,
    fetch_sources = True,
    lock_file = "//:kotlin_rules_maven_install.json",
    repositories = [
        "https://maven-central.storage.googleapis.com/repos/central/data/",
        "https://maven.google.com",
        "https://repo1.maven.org/maven2",
    ],
)
maven.override(
    name = "override_target_in_deps_kotlin_stdlib",
    coordinates = "org.jetbrains.kotlin.kotlin:kotlin-stdlib",
    target = "@rules_kotlin//kotlin/compiler:kotlin-stdlib",
)
maven.override(
    name = "override_target_in_deps_kotlin_stdlib_jdk7",
    coordinates = "org.jetbrains.kotlin.kotlin:kotlin-stdlib-jdk7",
    target = "@rules_kotlin//kotlin/compiler:kotlin-stdlib-jdk7",
)
maven.override(
    name = "override_target_in_deps_kotlin_stdlib_jdk8",
    coordinates = "org.jetbrains.kotlin.kotlin:kotlin-stdlib-jdk8",
    target = "@rules_kotlin//kotlin/compiler:kotlin-stdlib-jdk8",
)
use_repo(maven, "kotlin_rules_maven", "unpinned_kotlin_rules_maven")

bazel_dep(name = "rules_pkg", version = "1.0.1")
bazel_dep(name = "stardoc", version = "0.8.0", repo_name = "io_bazel_stardoc")

bazel_dep(name = "rules_testing", version = "0.5.0", dev_dependency = True)
bazel_dep(name = "rules_bazel_integration_test", version = "0.25.0", dev_dependency = True)

bazel_binaries = use_extension("@rules_bazel_integration_test//:extensions.bzl", "bazel_binaries", dev_dependency = True)
bazel_binaries.download(version_file = "//:.bazelversion")
bazel_binaries.download(version = "8.1.0")
use_repo(
    bazel_binaries,
    "bazel_binaries",
    "bazel_binaries_bazelisk",
    "build_bazel_bazel_.bazelversion",
    "build_bazel_bazel_8_1_0",
)
